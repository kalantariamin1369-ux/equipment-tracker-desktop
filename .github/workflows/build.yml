name: Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest
    
    strategy:
      matrix:
        configuration: [Debug, Release]
        platform: ["Any CPU"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.config') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore NuGet packages
      run: nuget restore EquipmentTracker.sln

    - name: Build solution
      run: |
        msbuild EquipmentTracker.sln /p:Configuration=${{ matrix.configuration }} /p:Platform="${{ matrix.platform }}" || msbuild EquipmentTracker.sln /p:Configuration=${{ matrix.configuration }}

    - name: Verify main executable
      shell: pwsh
      run: |
        $exe = "EquipmentTracker/bin/${{ matrix.configuration }}/EquipmentTracker.exe"
        if (Test-Path $exe) {
          Write-Host "✅ Build successful: $exe"
        } else {
          Write-Error "❌ Missing executable: $exe"
          exit 1
        }

    - name: Upload build artifacts
      if: matrix.configuration == 'Release'
      uses: actions/upload-artifact@v4
      with:
        name: EquipmentTracker-${{ matrix.platform }}-${{ matrix.configuration }}
        path: EquipmentTracker/bin/${{ matrix.configuration }}/
        retention-days: 14

  clean-old-workflows:
    runs-on: ubuntu-latest
    steps:
      - name: Archive deprecated Docker workflow
        run: |
          echo "Archiving alibabacloud.yml..."
          mkdir -p .github/workflows/archive
          if [ -f .github/workflows/alibabacloud.yml ]; then mv .github/workflows/alibabacloud.yml .github/workflows/archive/alibabacloud.yml; fi
          echo "✅ Docker workflow archived successfully."